services:
  auth_service:
    build: ./auth-service
    command: bash -c "alembic upgrade head && fastapi dev src/main.py --host 0.0.0.0 --port 8000"
    volumes:
      - ./auth-service/:/app/
    environment:
      - DATABASE_URI=postgresql://auth_username:auth_password@auth_db/auth_db
    env_file: ./auth-service/.env
    depends_on:
      auth_db:
        condition: service_healthy

  auth_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_auth:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=auth_username
      - POSTGRES_PASSWORD=auth_password
      - POSTGRES_DB=auth_db
    healthcheck:
      test: "psql -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 5s

  todo_service:
    build: ./todo-service
    command: bash -c "alembic upgrade head && fastapi dev src/main.py --host 0.0.0.0 --port 8000"
    volumes:
      - ./todo-service/:/app/
    environment:
      - DATABASE_URI=postgresql://todo_username:todo_password@todo_db/todo_db
      - AUTH_SERVICE_HOST_URL=http://auth_service:8000/api/v1
    env_file: ./todo-service/.env
    depends_on:
      todo_db:
        condition: service_healthy

  todo_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_todo:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=todo_username
      - POSTGRES_PASSWORD=todo_password
      - POSTGRES_DB=todo_db
    healthcheck:
      test: "psql -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 5s

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - todo_service
      - auth_service

volumes:
  postgres_data_auth:
  postgres_data_todo:
